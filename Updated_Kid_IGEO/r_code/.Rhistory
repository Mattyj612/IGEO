}
gc_curvature(1, 1)
curve_data <- tibble::tibble(
separation = rep(1:5),
height = rep(1:4)
)
curve_data <- tibble::tibble(
separation = rep(1:5, 4),
height = rep(1:4, 5)
)
View(curve_data)
curve_data <- tibble::tibble(
height = rep(1:4, each = 5),
separation = rep(1:5, 4)
)
View(curve_data)
curve_data <- tibble::tibble(
curve_data <- tibble::tibble(
separation = rep(1:5, 4),
height = rep(1:4, each = 5),
geo_curve = purrr::map_2(
.x = separation,
.y = height,
.f = gc_curvature
)
)
curve_data <- tibble::tibble(
separation = rep(1:5, 4),
height = rep(1:4, each = 5),
geo_curve = purrr::map2(
.x = separation,
.y = height,
.f = gc_curvature
)
)
View(curve_data)
curve_data <- tibble::tibble(
separation = rep(1:5, 4),
height = rep(1:4, each = 5),
geo_curve = purrr::map2(
.x = separation,
.y = height,
.f = gc_curvature
) %>% round(4)
)
library(pracma)
library(tidyverse)
radius = 3
height_list = c(-1/sqrt(2), -1/2, 1/2, 1/sqrt(2))
view_angle = c(0.108, 0.073, -0.073, -0.108)
ac_curvature <- function(separation, height, t) {
unit_height <- height_list[height]
x_coord <- (1/10)*(separation + 1)
y_coord <- -sqrt(1 - x_coord^2 - unit_height^2)
left_pt <- radius*c(-x_coord, y_coord, unit_height)
right_pt <- radius*c(x_coord, y_coord, unit_height)
back_pt <- radius*c(0, cos(t), sin(t))
vec_1 <- left_pt - back_pt
vec_2 <- right_pt - back_pt
normal <- pracma::cross(vec_1, vec_2)
unit_normal <- normal/Norm(normal)
plane_constant <- pracma::dot(left_pt, unit_normal)
center_pt <- plane_constant*unit_normal
to_left <- left_pt - center_pt
to_right <- right_pt - center_pt
perp_temp <- cross(cross(to_left, to_right), to_left)
perp <- Norm(to_left)*perp_temp/Norm(perp_temp)
end_angle <- acos(dot(to_left, to_right)/(Norm(to_left))^2)
mid_angle <- end_angle/2
max_height <- center_pt + cos(mid_angle)*to_left + sin(mid_angle)*perp
return(abs(max_height[3] - unit_height))
}
gc_curvature <- function(separation, height) {
unit_height <- height_list[height]
x_coord <- (1/10)*(separation + 1)
y_coord <- -sqrt(1 - x_coord^2 - unit_height^2)
left_pt <- radius*c(-x_coord, y_coord, unit_height)
right_pt <- radius*c(x_coord, y_coord, unit_height)
center_pt <- c(0, 0, 0)
to_left <- left_pt - center_pt
to_right <- right_pt - center_pt
perp_temp <- cross(cross(to_left, to_right), to_left)
perp <- Norm(to_left)*perp_temp/Norm(perp_temp)
end_angle <- acos(dot(to_left, to_right)/(Norm(to_left))^2)
mid_angle <- end_angle/2
max_height <- center_pt + cos(mid_angle)*to_left + sin(mid_angle)*perp
return(abs(max_height[3] - unit_height))
}
curve_data <- tibble::tibble(
separation = rep(1:5, 4),
height = rep(1:4, each = 5),
geo_curve = purrr::map2(
.x = separation,
.y = height,
.f = gc_curvature
) %>% round(4)
)
curve_data <- tibble::tibble(
separation = rep(1:5, 4),
height = rep(1:4, each = 5),
geo_curve = purrr::map2(
.x = separation,
.y = height,
.f = gc_curvature
) %>% round(4)
)
curve_data <- tibble::tibble(
separation = rep(1:5, 4),
height = rep(1:4, each = 5),
geo_curve = purrr::map2(
.x = separation,
.y = height,
.f = gc_curvature
)
)
library(pracma)
library(tidyverse)
cross <- pracma::cross
radius = 3
height_list = c(-1/sqrt(2), -1/2, 1/2, 1/sqrt(2))
view_angle = c(0.108, 0.073, -0.073, -0.108)
ac_curvature <- function(separation, height, t) {
unit_height <- height_list[height]
x_coord <- (1/10)*(separation + 1)
y_coord <- -sqrt(1 - x_coord^2 - unit_height^2)
left_pt <- radius*c(-x_coord, y_coord, unit_height)
right_pt <- radius*c(x_coord, y_coord, unit_height)
back_pt <- radius*c(0, cos(t), sin(t))
vec_1 <- left_pt - back_pt
vec_2 <- right_pt - back_pt
normal <- pracma::cross(vec_1, vec_2)
unit_normal <- normal/Norm(normal)
plane_constant <- pracma::dot(left_pt, unit_normal)
center_pt <- plane_constant*unit_normal
to_left <- left_pt - center_pt
to_right <- right_pt - center_pt
perp_temp <- cross(cross(to_left, to_right), to_left)
perp <- Norm(to_left)*perp_temp/Norm(perp_temp)
end_angle <- acos(dot(to_left, to_right)/(Norm(to_left))^2)
mid_angle <- end_angle/2
max_height <- center_pt + cos(mid_angle)*to_left + sin(mid_angle)*perp
return(abs(max_height[3] - unit_height))
}
gc_curvature <- function(separation, height) {
unit_height <- height_list[height]
x_coord <- (1/10)*(separation + 1)
y_coord <- -sqrt(1 - x_coord^2 - unit_height^2)
left_pt <- radius*c(-x_coord, y_coord, unit_height)
right_pt <- radius*c(x_coord, y_coord, unit_height)
center_pt <- c(0, 0, 0)
to_left <- left_pt - center_pt
to_right <- right_pt - center_pt
perp_temp <- cross(cross(to_left, to_right), to_left)
perp <- Norm(to_left)*perp_temp/Norm(perp_temp)
end_angle <- acos(dot(to_left, to_right)/(Norm(to_left))^2)
mid_angle <- end_angle/2
max_height <- center_pt + cos(mid_angle)*to_left + sin(mid_angle)*perp
return(abs(max_height[3] - unit_height))
}
curve_data <- tibble::tibble(
separation = rep(1:5, 4),
height = rep(1:4, each = 5),
geo_curve = purrr::map2(
.x = separation,
.y = height,
.f = gc_curvature
)
)
View(curve_data)
curve_data <- tibble::tibble(
separation = rep(1:5, 4),
height = rep(1:4, each = 5),
geo_curve = purrr::map2(
.x = separation,
.y = height,
.f = gc_curvature
) %>% round(4)
)
curve_data <- tibble::tibble(
separation = rep(1:5, 4),
height = rep(1:4, each = 5),
geo_curve = purrr::map2(
.x = separation,
.y = height,
.f = function(x) round(gc_curvature(x), 4)
)
)
curve_data <- tibble::tibble(
separation = rep(1:5, 4),
height = rep(1:4, each = 5),
geo_curve = purrr::map2(
.x = separation,
.y = height,
.f = function(x){round(gc_curvature(x), 4)}
)
)
curve_data <- tibble::tibble(
separation = rep(1:5, 4),
height = rep(1:4, each = 5),
geo_curve = purrr::map2(
.x = separation,
.y = height,
.f = function(x){round(gc_curvature(x, y), 4)}
)
)
curve_data <- tibble::tibble(
separation = rep(1:5, 4),
height = rep(1:4, each = 5),
geo_curve = purrr::map2(
.x = separation,
.y = height,
.f = function(x, y){round(gc_curvature(x, y), 4)}
)
)
View(curve_data)
ac_curvature(1, 1, -1.2)
gc_curvature(1, 1)
ac_curvature(1, 1, -1.4)
ac_curvature(1, 1, -1.7)
ac_curvature(1, 1, -1.1)
ac_curvature(1, 1, -1.0)
ac_curvature(1, 1, -0.8)
ac_curvature(1, 1, -0.6)
ac_curvature(1, 1, -0.4)
ac_curvature(1, 1, -0.2)
ac_curvature(1, 1, -0.1)
ac_curvature(1, 1, 0)
gc_curvature <- function(separation, height) {
unit_height <- height_list[height]
x_coord <- (1/10)*(separation + 1)
y_coord <- -sqrt(1 - x_coord^2 - unit_height^2)
left_pt <- radius*c(-x_coord, y_coord, unit_height)
right_pt <- radius*c(x_coord, y_coord, unit_height)
center_pt <- c(0, 0, 0)
to_left <- left_pt - center_pt
to_right <- right_pt - center_pt
perp_temp <- cross(cross(to_left, to_right), to_left)
perp <- Norm(to_left)*perp_temp/Norm(perp_temp)
end_angle <- acos(dot(to_left, to_right)/(Norm(to_left))^2)
mid_angle <- end_angle/2
max_height <- center_pt + cos(mid_angle)*to_left + sin(mid_angle)*perp
return(abs(abs(max_height[3]) - abs(unit_height)))
}
gc_curvature(1, 1)
height_list[1]
gc_curvature <- function(separation, height) {
unit_height <- height_list[height]
x_coord <- (1/10)*(separation + 1)
y_coord <- -sqrt(1 - x_coord^2 - unit_height^2)
left_pt <- radius*c(-x_coord, y_coord, unit_height)
right_pt <- radius*c(x_coord, y_coord, unit_height)
perp_temp <- cross(cross(left_pt, right_pt), left_pt)
perp <- Norm(left_pt)*perp_temp/Norm(perp_temp)
end_angle <- acos(dot(left_pt, right_pt)/(Norm(left_pt))^2)
mid_angle <- end_angle/2
max_height <- cos(mid_angle)*to_left + sin(mid_angle)*perp
return(abs(abs(max_height[3]) - abs(unit_height)))
}
gc_curvature(1, 1)
gc_curvature <- function(separation, height) {
unit_height <- height_list[height]
x_coord <- (1/10)*(separation + 1)
y_coord <- -sqrt(1 - x_coord^2 - unit_height^2)
left_pt <- radius*c(-x_coord, y_coord, unit_height)
right_pt <- radius*c(x_coord, y_coord, unit_height)
perp_temp <- cross(cross(left_pt, right_pt), left_pt)
perp <- Norm(left_pt)*perp_temp/Norm(perp_temp)
end_angle <- acos(dot(left_pt, right_pt)/(Norm(left_pt))^2)
mid_angle <- end_angle/2
max_height <- cos(mid_angle)*left_pt + sin(mid_angle)*perp
return(abs(abs(max_height[3]) - abs(unit_height)))
}
gc_curvature(1, 1)
radius*unit_height
radius*height_list[1]
radius
radius = 3.5
gc_curvature(1, 1)
radius
curve_data <- tibble::tibble(
separation = rep(1:5, 4),
height = rep(1:4, each = 5),
geo_curve = purrr::map2(
.x = separation,
.y = height,
.f = function(x, y){round(gc_curvature(x, y), 4)}
)
)
View(curve_data)
mid_angle <- end_angle/2
gc_curvature <- function(separation, height) {
unit_height <- height_list[height]
x_coord <- (1/10)*(separation + 1)
y_coord <- -sqrt(1 - x_coord^2 - unit_height^2)
left_pt <- radius*c(-x_coord, y_coord, unit_height)
right_pt <- radius*c(x_coord, y_coord, unit_height)
perp_temp <- cross(cross(left_pt, right_pt), left_pt)
perp <- Norm(left_pt)*perp_temp/Norm(perp_temp)
end_angle <- acos(dot(left_pt, right_pt)/(Norm(left_pt))^2)
mid_angle <- end_angle/2
max_height <- cos(mid_angle)*left_pt + sin(mid_angle)*perp
return(max_height)
}
gc_curvature(1, 1)
radius*height_list[1]
-2.52-2.47
-2.52--2.47
gc_curvature <- function(separation, height) {
unit_height <- height_list[height]
x_coord <- (1/10)*(separation + 1)
y_coord <- -sqrt(1 - x_coord^2 - unit_height^2)
left_pt <- radius*c(-x_coord, y_coord, unit_height)
right_pt <- radius*c(x_coord, y_coord, unit_height)
perp_temp <- cross(cross(left_pt, right_pt), left_pt)
perp <- Norm(left_pt)*perp_temp/Norm(perp_temp)
end_angle <- acos(dot(left_pt, right_pt)/(Norm(left_pt))^2)
mid_angle <- end_angle/2
max_height <- cos(mid_angle)*left_pt + sin(mid_angle)*perp
return(max_height[3] - unit_height)
}
gc_curvature(1, 1)
height_list[1]
gc_curvature <- function(separation, height) {
unit_height <- height_list[height]
x_coord <- (1/10)*(separation + 1)
y_coord <- -sqrt(1 - x_coord^2 - unit_height^2)
left_pt <- radius*c(-x_coord, y_coord, unit_height)
right_pt <- radius*c(x_coord, y_coord, unit_height)
perp_temp <- cross(cross(left_pt, right_pt), left_pt)
perp <- Norm(left_pt)*perp_temp/Norm(perp_temp)
end_angle <- acos(dot(left_pt, right_pt)/(Norm(left_pt))^2)
mid_angle <- end_angle/2
max_height <- cos(mid_angle)*left_pt + sin(mid_angle)*perp
return(abs(max_height[3] - radius*unit_height))
}
t_values <- c()
curve_data <- tibble::tibble(
separation = rep(1:5, 4),
height = rep(1:4, each = 5),
geo_curve = purrr::map2(
.x = separation,
.y = height,
.f = function(x, y){round(gc_curvature(x, y), 4)}
)
)
View(curve_data)
ac_curvature(1, 1, 0)
gc_curvature(1, 1)
ac_curvature <- function(separation, height, t) {
unit_height <- height_list[height]
x_coord <- (1/10)*(separation + 1)
y_coord <- -sqrt(1 - x_coord^2 - unit_height^2)
left_pt <- radius*c(-x_coord, y_coord, unit_height)
right_pt <- radius*c(x_coord, y_coord, unit_height)
back_pt <- radius*c(0, cos(t), sin(t))
vec_1 <- left_pt - back_pt
vec_2 <- right_pt - back_pt
normal <- pracma::cross(vec_1, vec_2)
unit_normal <- normal/Norm(normal)
plane_constant <- pracma::dot(left_pt, unit_normal)
center_pt <- plane_constant*unit_normal
to_left <- left_pt - center_pt
to_right <- right_pt - center_pt
perp_temp <- cross(cross(to_left, to_right), to_left)
perp <- Norm(to_left)*perp_temp/Norm(perp_temp)
end_angle <- acos(dot(to_left, to_right)/(Norm(to_left))^2)
mid_angle <- end_angle/2
max_height <- center_pt + cos(mid_angle)*to_left + sin(mid_angle)*perp
return(abs(max_height[3] - radius*unit_height))
}
gc_curvature <- function(separation, height) {
unit_height <- height_list[height]
x_coord <- (1/10)*(separation + 1)
y_coord <- -sqrt(1 - x_coord^2 - unit_height^2)
left_pt <- radius*c(-x_coord, y_coord, unit_height)
right_pt <- radius*c(x_coord, y_coord, unit_height)
perp_temp <- cross(cross(left_pt, right_pt), left_pt)
perp <- Norm(left_pt)*perp_temp/Norm(perp_temp)
end_angle <- acos(dot(left_pt, right_pt)/(Norm(left_pt))^2)
mid_angle <- end_angle/2
max_height <- cos(mid_angle)*left_pt + sin(mid_angle)*perp
return(abs(max_height[3] - radius*unit_height))
}
t_values <- c()
curve_data <- tibble::tibble(
separation = rep(1:5, 4),
height = rep(1:4, each = 5),
geo_curve = purrr::map2(
.x = separation,
.y = height,
.f = function(x, y){round(gc_curvature(x, y), 4)}
)
)
ac_curvature(1, 1, 0)
gc_curvature(1, 1)
ac_curvature(1, 1, -1.2)
ac_curvature(1, 1, 1)
ac_curvature(1, 1, -1)
ac_curvature(1, 1, -2)
ac_curvature(1, 1, -1.5)
ac_curvature(1, 1, -1.4)
ac_curvature(1, 1, -1.43)
ac_curvature(1, 1, -1.44)
ac_curvature(1, 1, -1.45)
ac_curvature(1, 1, -1.455)
ac_curvature(1, 1, -1.452)
ac_curvature(1, 2, -1.452)
gc_curvature(1, 2)
ac_curvature(1, 2, -1.2)
ac_curvature(1, 2, -1.15)
ac_curvature(1, 2, -1.18)
ac_curvature(1, 2, -1.19)
ac_curvature(1, 2, -1.185)
ac_curvature(1, 2, -1.187)
ac_curvature(1, 2, -1.188)
ac_curvature(1, 2, -1.189)
ac_curvature(1, 3, -1.189)
gc_curvature(1, 3)
ac_curvature(1, 3, -1)
ac_curvature(1, 3, -0.8)
ac_curvature(1, 3, -0.6)
ac_curvature(1, 3, -0.57)
ac_curvature(1, 3, 1.189)
ac_curvature(1, 4, 1.189)
gc_curvature(1, 4)
ac_curvature(1, 4, 1.452)
ac_curvature(1, 1, -1.452)
gc_curvature(1, 1)
ac_curvature(1, 1, -1.4)
ac_curvature(1, 1, -1.42)
ac_curvature(1, 1, -1.41)
ac_curvature(1, 1, -1.418)
ac_curvature(1, 1, -1.417)
ac_curvature(2, 1, -1.417)
gc_curvature(2, 1)
ac_curvature(2, 1, -1.4)
ac_curvature(2, 1, -1.3)
ac_curvature(2, 1, -1.4)
ac_curvature(2, 2, -1.4)
gc_curvature(2, 2)
ac_curvature(2, 2, -1)
ac_curvature(2, 2, -1.1)
ac_curvature(2, 2, -1.2)
ac_curvature(2, 2, -1.18)
ac_curvature(2, 2, -1.19)
ac_curvature(2, 2, -1.185)
ac_curvature(2, 2, -1.186)
ac_curvature(2, 3, 1.186)
gc_curvature(2, 3)
ac_curvature(3, 1, -1.4)
gc_curvature(3, 1)
ac_curvature(3, 1, -1.3)
ac_curvature(3, 1, -1.36)
ac_curvature(3, 1, -1.37)
ac_curvature(3, 1, -1.371)
ac_curvature(3, 1, -1.372)
ac_curvature(3, 1, -1.373)
ac_curvature(3, 1, -1.375)
ac_curvature(3, 2, -1.375)
gc_curvature(3, 2)
ac_curvature(3, 2, -1)
gc_curvature(3, 2)
ac_curvature(3, 2, -1.1)
ac_curvature(3, 2, -1.2)
ac_curvature(3, 2, -1.15)
ac_curvature(3, 2, -1.18)
ac_curvature(3, 2, -1.182)
ac_curvature(3, 2, -1.183)
ac_curvature(4, 1, -1.183)
gc_curvature(4, 1)
ac_curvature(4, 1, -1.35)
ac_curvature(4, 1, -1.34)
ac_curvature(4, 1, -1.335)
ac_curvature(4, 1, -1.336)
ac_curvature(4, 1, -1.337)
ac_curvature(4, 2, -1.336)
gc_curvature(4, 2)
ac_curvature(4, 2, -1.180)
ac_curvature(4, 2, -1.179)
ac_curvature(4, 2, -1.178)
ac_curvature(4, 2, -1.177)
ac_curvature(5, 1, -1.34)
gc_curvature(5, 1)
ac_curvature(5, 1, -1.2)
ac_curvature(5, 1, -1.3)
ac_curvature(5, 1, -1.28)
ac_curvature(5, 1, -1.27)
ac_curvature(5, 1, -1.275)
ac_curvature(5, 1, -1.273)
ac_curvature(5, 1, -1.274)
ac_curvature(5, 1, -1.273)
ac_curvature(5, 1, -1.2735)
ac_curvature(5, 1, -1.2734)
ac_curvature(5, 1, -1.2735)
ac_curvature(5, 2, -1.2735)
gc_curvature(5, 2)
ac_curvature(5, 2, -1)
ac_curvature(5, 2, -1.2)
ac_curvature(5, 2, -1.1)
ac_curvature(5, 2, -1.15)
ac_curvature(5, 2, -1.152)
ac_curvature(5, 2, -1.154)
ac_curvature(5, 2, -1.157)
ac_curvature(5, 2, -1.159)
ac_curvature(5, 2, -1.16)
ac_curvature(5, 2, -1.17)
ac_curvature(5, 2, -1.165)
ac_curvature(5, 2, -1.167)
ac_curvature(5, 2, -1.169)
ac_curvature(5, 2, -1.168)
ac_curvature(5, 2, -1.1682)
ac_curvature(5, 2, -1.1681)
